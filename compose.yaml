services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    platform: linux/amd64
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    networks:
      - default
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 10

  db-command:
    image: debezium/postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: command
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    command: >
      postgres -c wal_level=logical
              -c max_wal_senders=10
              -c max_replication_slots=10
              -c max_connections=100

  kafka-init:
    platform: linux/amd64
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      sleep 5 &&
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic outbox_event.stock-updated-dlq --partitions 1 --replication-factor 1 --config retention.ms=604800000
      # kafka-configs --bootstrap-server kafka:29092 --alter --entity-type topics --entity-name outbox_event.stock-updated-dlq --add-config retention.ms=604800000
      exit 0
      "
    networks:
      - default


  db-query:
    image: mongo:latest
    ports:
      - "27017:27017"

  kafka-ui:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafka-ui
    networks:
      - default
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  connect:
    image: debezium/connect:2.6
    networks:
      - default
    ports:
      - 8083:8083
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
      # CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: false
      # CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_PLUGIN_PATH: /kafka/connect,/usr/share/java,/usr/share/confluent-hub-components
      CONNECT_DATABASE_HISTORY_KAFKA_TOPIC: schema-changes.command
      CONNECT_DATABASE_HISTORY_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      kafka:
        condition: service_healthy
      db-command:
        condition: service_started

volumes:
  db_data:
    driver: local

networks:
  default:
    driver: bridge






